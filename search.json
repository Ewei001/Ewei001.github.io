[{"title":"about SpringFramework","url":"http://yoursite.com/2017/04/30/about SpringFramework/","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>因为简历的项目里有写到spring，所以面试都会被问到spring的问题，由于是几年前的项目，也没有相关准备，所以被问到的时候很懵逼……</p>\n<h2 id=\"主要三个问题\"><a href=\"#主要三个问题\" class=\"headerlink\" title=\"主要三个问题\"></a>主要三个问题</h2><ul>\n<li>spring是什么，为什么要用spring</li>\n<li>spring中的IOC和AOP，是为了解决什么样的问题</li>\n<li>spring配置</li>\n</ul>\n<h3 id=\"spring是什么，为什么要用spring\"><a href=\"#spring是什么，为什么要用spring\" class=\"headerlink\" title=\"spring是什么，为什么要用spring\"></a>spring是什么，为什么要用spring</h3><p>spring是Java企业级应用的开源框架。目标是简化Java企业及应用开发。spring框架是一个为Java应用程序的开发提供综合、广泛的基础性支持的Java平台。<br>Spring帮助开发者解决了开发中的基础性问题，使得开发人员可以专注于应用程序的开发。Spring框架本身亦是按照设计模式精心打造，这使得我们可以在开发环境中安心地继承Spring框架，不必担心SPring是如何在后台进行工作的。</p>\n<h4 id=\"SPring有七大功能模块，分别是：\"><a href=\"#SPring有七大功能模块，分别是：\" class=\"headerlink\" title=\"SPring有七大功能模块，分别是：\"></a>SPring有七大功能模块，分别是：</h4><ul>\n<li><p>Spring core<br>Core模块是Spring的核心类库，Spring的所有功能都依赖于该类库，Core主要实现IOC功能，Spring的所有功能都是借助IOC实现的。</p>\n</li>\n<li><p>AOP<br>AOP模块是Spring的AOP库，提供了AOP（拦截器）机制，并提供常用的拦截器，供用户自定义和配置。</p>\n</li>\n<li><p>ORM<br>Spring的ORM模块提供对常用的ORM框架的管理和辅助支持，Spring支持常用的Hibernate,mybatis等框架的支持，Spring本身并不对ORM进行实现，仅对常见的ORM框架进行封装，并对其进行管理。</p>\n</li>\n<li><p>DAO<br>Spring提供对JDBC的支持，对JDBC进行封装，允许JDBC使用Spring资源，并能统一管理JDBC实务，并不对JDBC进行实现。</p>\n</li>\n<li><p>WEB<br>WEB模块提供对常见框架如Struts1,webwork（struts2）,JSF的支持，Spring能够管理这些框架，将Spring的资源注入给框架，也能在这些框架的前后插入拦截器。</p>\n</li>\n<li><p>CONTEXT<br>CONTEXT模块提供框架式的Bean访问方式，其他程序可以通过Context访问Spring的Bean资源，相当于资源注入。</p>\n</li>\n<li><p>MVC<br>WEB MVC模块为Spring提供了一套轻量级的MVC实现，在Spring的开发中，我们既可以用Struts也可以用Spring自己的MVC框架，相对于Struts，Spring自己的MVC框架更加简洁方便。</p>\n</li>\n</ul>\n<h4 id=\"为什么要用而不是直接写代码呢，也就是说spring有哪些优点\"><a href=\"#为什么要用而不是直接写代码呢，也就是说spring有哪些优点\" class=\"headerlink\" title=\"为什么要用而不是直接写代码呢，也就是说spring有哪些优点\"></a>为什么要用而不是直接写代码呢，也就是说spring有哪些优点</h4><h3 id=\"spring中的IOC和AOP，是为了解决什么样的问题\"><a href=\"#spring中的IOC和AOP，是为了解决什么样的问题\" class=\"headerlink\" title=\"spring中的IOC和AOP，是为了解决什么样的问题\"></a>spring中的IOC和AOP，是为了解决什么样的问题</h3><h4 id=\"什么是IOC\"><a href=\"#什么是IOC\" class=\"headerlink\" title=\"什么是IOC\"></a>什么是IOC</h4><p>  控制反转(Inverse of Control，IOC)有时也被称为依赖注入，是一种降低对象之间耦合关系的设计思想。<br>  一般而言，在分层体系结构中，都是上层调用下层的接口，上层依赖于下层的执行，即调用者依赖于被调用者。<br>  而通过IOC方式，使得上层不再依赖于下层的接口，即通过采用一定的机制来选择不同的下层实现，完成控制反转，使得由调用者来决定被调用者。<br>  IOC通过注入一个实例化的对象来达到解耦的目的。使用这种方法后，对象不会被显示地调用，而是根据需求通过IOC容器（例如spring）来提供。</p>\n<h3 id=\"什么是AOP\"><a href=\"#什么是AOP\" class=\"headerlink\" title=\"什么是AOP\"></a>什么是AOP</h3><h3 id=\"spring配置\"><a href=\"#spring配置\" class=\"headerlink\" title=\"spring配置\"></a>spring配置</h3>","categories":[],"tags":["J2EE"]},{"title":"blog note","url":"http://yoursite.com/2017/04/26/blog note/","content":"<h2 id=\"思考\"><a href=\"#思考\" class=\"headerlink\" title=\"思考\"></a>思考</h2><p>最近想了很多，本科四年都没有出去实习，每次提到面试都很畏惧<br>现在遇到了很多很优秀的人，感觉和别人的差距真是太大了<br>最近面试了很多公司，因为实习的原因也没有很多时间准备，下班收拾一下就已经很晚了。<br>因此结果也都好惨，说到底还是自己的基础不扎实，不过也算是攒了一点点经验，总比一次都没面还以为自己懂很多要好的多。</p>\n<p>之前搭的博客因为不小心错删本地文件一直耽搁着，最近因为面试受到了不少刺激，于是决定开始继续写博客<br>最近一段时间的总结就是：学习一定要有输出，这样记忆才会深刻一些。</p>\n<h3 id=\"希望从此刻慢慢缩小差距\"><a href=\"#希望从此刻慢慢缩小差距\" class=\"headerlink\" title=\"希望从此刻慢慢缩小差距\"></a>希望从此刻慢慢缩小差距</h3><h2 id=\"这几天经常被问到的问题，下面就按相关问题展开学习：\"><a href=\"#这几天经常被问到的问题，下面就按相关问题展开学习：\" class=\"headerlink\" title=\"这几天经常被问到的问题，下面就按相关问题展开学习：\"></a>这几天经常被问到的问题，下面就按相关问题展开学习：</h2><p>spring中的IOC和AOP，是为了解决什么样的问题<br>为什么要使用spring<br>关于字符串，如果有很多很多字符串拼接，不能总用+,效率太低了，那要怎样处理<br>数据库优化问题<br>一些排序问题<br>常用的设计模式，哪些场景会用到<br>多线程，concurrent包中有哪些常用类，以及使用<br>线程池问题<br>集合的问题<br>Java的反射机制，什么情况会用到<br>关于关键字final static volatile<br>内存模型<br>gc如何回收，什么情况会回收，什么样算是不再被使用了<br>栈是如何实现的<br>算法<br>关于网站中的爬虫，如何反爬虫，对于反爬虫措施如何避免<br>关于Socket<br>关于网络原理<br>mongodb和MySQL的区别</p>\n<p>前端http通信的过程</p>\n","categories":[],"tags":["essay"]},{"title":"about var","url":"http://yoursite.com/2017/04/25/about var/","content":"<h2 id=\"最近遇到了一个关于var变量很简单的问题，废话不多说，直接看问题：\"><a href=\"#最近遇到了一个关于var变量很简单的问题，废话不多说，直接看问题：\" class=\"headerlink\" title=\"最近遇到了一个关于var变量很简单的问题，废话不多说，直接看问题：\"></a>最近遇到了一个关于var变量很简单的问题，废话不多说，直接看问题：</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> global = <span class=\"string\">'hello'</span>;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(global);</div><div class=\"line\">\t<span class=\"keyword\">var</span> global = <span class=\"string\">'world'</span>;</div><div class=\"line\">\t<span class=\"built_in\">console</span>.log(global);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"两次打印，第一次undefined，第二次是world，笔者一直以为两次应该是hello和world，很是困扰。\"><a href=\"#两次打印，第一次undefined，第二次是world，笔者一直以为两次应该是hello和world，很是困扰。\" class=\"headerlink\" title=\"两次打印，第一次undefined，第二次是world，笔者一直以为两次应该是hello和world，很是困扰。\"></a>两次打印，第一次undefined，第二次是world，笔者一直以为两次应该是hello和world，很是困扰。</h2><h2 id=\"如果把后面两行去掉：\"><a href=\"#如果把后面两行去掉：\" class=\"headerlink\" title=\"如果把后面两行去掉：\"></a>如果把后面两行去掉：</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> global = <span class=\"string\">'hello'</span>;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(global);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"这样子打印出来就是hello，那肯定是和后定义的变量有关系了。\"><a href=\"#这样子打印出来就是hello，那肯定是和后定义的变量有关系了。\" class=\"headerlink\" title=\"这样子打印出来就是hello，那肯定是和后定义的变量有关系了。\"></a>这样子打印出来就是hello，那肯定是和后定义的变量有关系了。</h2><h2 id=\"果然，在网上查了一下，第二个var变量作用于整个function，个人理解也就是相当于：\"><a href=\"#果然，在网上查了一下，第二个var变量作用于整个function，个人理解也就是相当于：\" class=\"headerlink\" title=\"果然，在网上查了一下，第二个var变量作用于整个function，个人理解也就是相当于：\"></a>果然，在网上查了一下，第二个var变量作用于整个function，个人理解也就是相当于：</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> global = <span class=\"string\">'hello'</span>;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> global;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(global);</div><div class=\"line\">\tglobal = <span class=\"string\">'world'</span>;</div><div class=\"line\">\t<span class=\"built_in\">console</span>.log(global);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"那要是函数内有相同变量就不可以访问全局变量了吗，答案当然是否定的\"><a href=\"#那要是函数内有相同变量就不可以访问全局变量了吗，答案当然是否定的\" class=\"headerlink\" title=\"那要是函数内有相同变量就不可以访问全局变量了吗，答案当然是否定的\"></a>那要是函数内有相同变量就不可以访问全局变量了吗，答案当然是否定的</h2><h2 id=\"在函数内可以通过window-global调用全局变量，\"><a href=\"#在函数内可以通过window-global调用全局变量，\" class=\"headerlink\" title=\"在函数内可以通过window.global调用全局变量，\"></a>在函数内可以通过window.global调用全局变量，</h2><h2 id=\"另外function内的this也是指向window实例，也可以吧引用写成this-global\"><a href=\"#另外function内的this也是指向window实例，也可以吧引用写成this-global\" class=\"headerlink\" title=\"另外function内的this也是指向window实例，也可以吧引用写成this.global\"></a>另外function内的this也是指向window实例，也可以吧引用写成this.global</h2><h2 id=\"当然最好还是尽量避免同名变量的出现，减少出错的概率。\"><a href=\"#当然最好还是尽量避免同名变量的出现，减少出错的概率。\" class=\"headerlink\" title=\"当然最好还是尽量避免同名变量的出现，减少出错的概率。\"></a>当然最好还是尽量避免同名变量的出现，减少出错的概率。</h2>","categories":[],"tags":["Javascript"]},{"title":"category","url":"http://yoursite.com/category/index.html","content":"","categories":[],"tags":[]},{"title":"project","url":"http://yoursite.com/project/index.html","content":"","categories":[],"tags":[]},{"title":"about","url":"http://yoursite.com/about/index.html","content":"","categories":[],"tags":[]},{"title":"link","url":"http://yoursite.com/link/index.html","content":"","categories":[],"tags":[]},{"title":"tag","url":"http://yoursite.com/tag/index.html","content":"","categories":[],"tags":[]},{"title":"search","url":"http://yoursite.com/search/index.html","content":"","categories":[],"tags":[]}]